# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aBXI28Jek3lxOYMpT6ROy4OlxBgMx-C9
"""

import streamlit as st
import pandas as pd
import numpy as np
import pickle

# Load model
with open("best_model.pkl", "rb") as f:
    model = pickle.load(f)

# App Title
st.title("💼 Employee Salary Prediction")
st.markdown("""
This app predicts whether an employee earns more than $50K/year based on their demographic and job-related information using a trained **Random Forest** model.
""")

# Input fields for user data
st.header("📝 Enter Employee Details")

age = st.slider("Age", 18, 75, 30)
workclass = st.selectbox("Workclass", [0, 1, 2, 3, 4, 5, 6, 7])
fnlwgt = st.number_input("Final Weight (fnlwgt)", value=100000)
educational_num = st.slider("Education Number", 1, 16, 10)
marital_status = st.selectbox("Marital Status", [0, 1, 2, 3, 4, 5, 6])
occupation = st.selectbox("Occupation", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])
relationship = st.selectbox("Relationship", [0, 1, 2, 3, 4, 5])
race = st.selectbox("Race", [0, 1, 2, 3, 4])
gender = st.selectbox("Gender", [0, 1])
capital_gain = st.number_input("Capital Gain", value=0)
capital_loss = st.number_input("Capital Loss", value=0)
hours_per_week = st.slider("Hours per Week", 1, 99, 40)
native_country = st.selectbox("Native Country", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])

# Predict button
if st.button("Predict Salary Range"):
    input_data = pd.DataFrame({
        'age': [age],
        'workclass': [workclass],
        'fnlwgt': [fnlwgt],
        'educational-num': [educational_num],
        'marital-status': [marital_status],
        'occupation': [occupation],
        'relationship': [relationship],
        'race': [race],
        'gender': [gender],
        'capital-gain': [capital_gain],
        'capital-loss': [capital_loss],
        'hours-per-week': [hours_per_week],
        'native-country': [native_country]
    })

    prediction = model.predict(input_data)
    result = ">50K" if prediction[0] == 1 else "<=50K"
    st.success(f"Predicted Income Range: {result}")

st.markdown("---")
st.caption("Model trained using UCI Adult Census dataset. Categorical values encoded numerically.")

